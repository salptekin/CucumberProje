package lambda;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Predicate;

public class LambdaExercisesFor0910 {

	public static void main(String[] args) {
		// Print the cube of all even elements in "a new list" by using "Functional" programming
		List<Integer> listInt = new ArrayList<Integer>();
		listInt.add(12);
		listInt.add(9);
		listInt.add(13);
		listInt.add(4);
		listInt.add(6);
		listInt.add(2);
		listInt.add(4);
		listInt.add(12);
		listInt.add(15);
		
		// Print the length of all elements in "a new list" by using "Functional" programming
		List<String> listStr = new ArrayList<String>();
		listStr.add("Ali");
		listStr.add("Mark");
		listStr.add("Jackson");
		listStr.add("Amanda");
		listStr.add("Chris");
		listStr.add("Tucker");
		
		// Create a filterAndPrint method which works for any filter by using listInt
		filterAndPrint(listInt, x->x%2==0);
		filterAndPrint(listInt, x->x%2!=0);
		filterAndPrint(listInt, x->x%3==0);
		filterAndPrint(listInt, x->x%5==0);

	}
	
	public static void filterAndPrint(List<Integer> list, Predicate<Integer> predicate) {
		list.stream()
		    .filter(predicate)
		    .forEach(System.out::println);	
	}

}
